_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[74],{"Cf/J":function(e,n,t){"use strict";t.d(n,"a",(function(){return s}));var i=t("aWzz"),r=t.n(i),a=t("ERkP"),l=t.n(a);function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}function s(e){var n=e.children,t=e.id,i=e.from,r=e.to,a=e.x1,s=e.y1,d=e.x2,u=e.y2,c=e.fromOffset,f=void 0===c?"0%":c,m=e.fromOpacity,p=void 0===m?1:m,y=e.toOffset,g=void 0===y?"100%":y,h=e.toOpacity,k=void 0===h?1:h,v=e.rotate,S=e.transform,x=e.vertical,O=void 0===x||x,b=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["children","id","from","to","x1","y1","x2","y2","fromOffset","fromOpacity","toOffset","toOpacity","rotate","transform","vertical"]),V=a,w=d,T=s,G=u;return!O||V||w||T||G||(V="0",w="0",T="0",G="1"),l.a.createElement("defs",null,l.a.createElement("linearGradient",o({id:t,x1:V,y1:T,x2:w,y2:G,gradientTransform:v?"rotate("+v+")":S},b),!!n&&n,!n&&l.a.createElement("stop",{offset:f,stopColor:i,stopOpacity:p}),!n&&l.a.createElement("stop",{offset:g,stopColor:r,stopOpacity:k})))}s.propTypes={id:r.a.string.isRequired,from:r.a.string,to:r.a.string,x1:r.a.oneOfType([r.a.string,r.a.number]),x2:r.a.oneOfType([r.a.string,r.a.number]),y1:r.a.oneOfType([r.a.string,r.a.number]),y2:r.a.oneOfType([r.a.string,r.a.number]),fromOffset:r.a.oneOfType([r.a.string,r.a.number]),fromOpacity:r.a.oneOfType([r.a.string,r.a.number]),toOffset:r.a.oneOfType([r.a.string,r.a.number]),toOpacity:r.a.oneOfType([r.a.string,r.a.number]),rotate:r.a.oneOfType([r.a.string,r.a.number]),transform:r.a.string,children:r.a.node,vertical:r.a.bool}},HbGN:function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));var i=t("+wNj");function r(e,n){if(null==e)return{};var t,r,a=Object(i.a)(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}},ZRGc:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/grid",function(){return t("cTRB")}])},cTRB:function(e,n,t){"use strict";t.r(n);var i=t("ERkP"),r=t.n(i),a=t("cxan"),l=t("HbGN"),o=t("O94r"),s=t.n(o),d=t("JmwF"),u=t("hsl+"),c=t.n(u),f=t("rkTo"),m=t("nNND"),p=t("HlJr"),y=r.a.createElement;function g(e){var n=e.top,t=void 0===n?0:n,i=e.left,r=void 0===i?0:i,o=e.scale,u=e.width,g=e.stroke,h=void 0===g?"#eaf0f6":g,k=e.strokeWidth,v=void 0===k?1:k,S=e.strokeDasharray,x=e.className,O=e.children,b=e.numTicks,V=void 0===b?10:b,w=e.lineStyle,T=e.offset,G=e.tickValues,q=Object(l.a)(e,["top","left","scale","width","stroke","strokeWidth","strokeDasharray","className","children","numTicks","lineStyle","offset","tickValues"]),R=(null!==G&&void 0!==G?G:Object(m.a)(o,V)).map((function(e){var n=T?(Object(p.a)(o(e))||0)+T:Object(p.a)(o(e))||0;return{from:new f.a({x:0,y:n}),to:new f.a({x:u,y:n})}}));return y(d.a,{className:s()("visx-rows",x),top:t,left:r},O?O({lines:R}):R.map((function(e,n){var t=e.from,i=e.to;return y(c.a,Object(a.a)({key:"row-line-".concat(n),from:t,to:i,stroke:h,strokeWidth:v,strokeDasharray:S,style:w},q))})))}try{g.displayName="GridRows",g.__docgenInfo={description:"",displayName:"GridRows",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Optionally override rendering of grid lines.",name:"children",required:!1,type:{name:"((props: { lines: GridLines; }) => ReactNode) | undefined"}},top:{defaultValue:{value:0},description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},left:{defaultValue:{value:0},description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:{value:"#eaf0f6"},description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:{value:1},description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},numTicks:{defaultValue:{value:10},description:"Approximate number of grid lines. Approximate due to d3 alogrithm, specify `tickValues` for precise control.",name:"numTicks",required:!1,type:{name:"number | undefined"}},lineStyle:{defaultValue:null,description:"Styles to apply as grid line style.",name:"lineStyle",required:!1,type:{name:"CSSProperties | undefined"}},offset:{defaultValue:null,description:"Pixel offset to apply as a translation (y- for Rows, x- for Columns) to each grid lines.",name:"offset",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to convert value to position.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"Exact values used to generate grid lines using `scale`.\nOverrides `numTicks` if specified.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},width:{defaultValue:null,description:"Total width of each grid row line.",name:"width",required:!0,type:{name:"number"}},fill:{defaultValue:null,description:"fill color applied to line element.",name:"fill",required:!1,type:{name:"string | undefined"}},from:{defaultValue:null,description:"Starting x,y point of the line.",name:"from",required:!1,type:{name:"Point | undefined"}},to:{defaultValue:null,description:"Ending x,y point of the line.",name:"to",required:!1,type:{name:"Point | undefined"}},innerRef:{defaultValue:null,description:"reference to line element.",name:"innerRef",required:!1,type:{name:"((instance: SVGLineElement | null) => void) | RefObject<SVGLineElement> | null | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/GridRows.tsx#GridRows"]={docgenInfo:g.__docgenInfo,name:"GridRows",path:"../visx-grid/src/grids/GridRows.tsx#GridRows"})}catch(q){}var h=r.a.createElement;function k(e){var n=e.top,t=void 0===n?0:n,i=e.left,r=void 0===i?0:i,o=e.scale,u=e.height,y=e.stroke,g=void 0===y?"#eaf0f6":y,k=e.strokeWidth,v=void 0===k?1:k,S=e.strokeDasharray,x=e.className,O=e.numTicks,b=void 0===O?10:O,V=e.lineStyle,w=e.offset,T=e.tickValues,G=e.children,q=Object(l.a)(e,["top","left","scale","height","stroke","strokeWidth","strokeDasharray","className","numTicks","lineStyle","offset","tickValues","children"]),R=(null!==T&&void 0!==T?T:Object(m.a)(o,b)).map((function(e){var n=w?(Object(p.a)(o(e))||0)+w:Object(p.a)(o(e))||0;return{from:new f.a({x:n,y:0}),to:new f.a({x:n,y:u})}}));return h(d.a,{className:s()("visx-columns",x),top:t,left:r},G?G({lines:R}):R.map((function(e,n){var t=e.from,i=e.to;return h(c.a,Object(a.a)({key:"column-line-".concat(n),from:t,to:i,stroke:g,strokeWidth:v,strokeDasharray:S,style:V},q))})))}try{k.displayName="GridColumns",k.__docgenInfo={description:"",displayName:"GridColumns",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},children:{defaultValue:null,description:"Optionally override rendering of grid lines.",name:"children",required:!1,type:{name:"((props: { lines: GridLines; }) => ReactNode) | undefined"}},top:{defaultValue:{value:0},description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},left:{defaultValue:{value:0},description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:{value:"#eaf0f6"},description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:{value:1},description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},numTicks:{defaultValue:{value:10},description:"Approximate number of grid lines. Approximate due to d3 alogrithm, specify `tickValues` for precise control.",name:"numTicks",required:!1,type:{name:"number | undefined"}},lineStyle:{defaultValue:null,description:"Styles to apply as grid line style.",name:"lineStyle",required:!1,type:{name:"CSSProperties | undefined"}},offset:{defaultValue:null,description:"Pixel offset to apply as a translation (y- for Rows, x- for Columns) to each grid lines.",name:"offset",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to convert value to position.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"Exact values used to generate grid lines using `scale`.\nOverrides `numTicks` if specified.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},height:{defaultValue:null,description:"Total height of each grid column line.",name:"height",required:!0,type:{name:"number"}},fill:{defaultValue:null,description:"fill color applied to line element.",name:"fill",required:!1,type:{name:"string | undefined"}},from:{defaultValue:null,description:"Starting x,y point of the line.",name:"from",required:!1,type:{name:"Point | undefined"}},to:{defaultValue:null,description:"Ending x,y point of the line.",name:"to",required:!1,type:{name:"Point | undefined"}},innerRef:{defaultValue:null,description:"reference to line element.",name:"innerRef",required:!1,type:{name:"((instance: SVGLineElement | null) => void) | RefObject<SVGLineElement> | null | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/GridColumns.tsx#GridColumns"]={docgenInfo:k.__docgenInfo,name:"GridColumns",path:"../visx-grid/src/grids/GridColumns.tsx#GridColumns"})}catch(q){}var v=r.a.createElement;function S(e){var n=e.top,t=e.left,i=e.xScale,r=e.yScale,o=e.width,u=e.height,c=e.className,f=e.stroke,m=e.strokeWidth,p=e.strokeDasharray,y=e.numTicksRows,h=e.numTicksColumns,S=e.rowLineStyle,x=e.columnLineStyle,O=e.xOffset,b=e.yOffset,V=e.rowTickValues,w=e.columnTickValues,T=Object(l.a)(e,["top","left","xScale","yScale","width","height","className","stroke","strokeWidth","strokeDasharray","numTicksRows","numTicksColumns","rowLineStyle","columnLineStyle","xOffset","yOffset","rowTickValues","columnTickValues"]);return v(d.a,{className:s()("visx-grid",c),top:n,left:t},v(g,Object(a.a)({className:c,scale:r,width:o,stroke:f,strokeWidth:m,strokeDasharray:p,numTicks:y,lineStyle:S,offset:b,tickValues:V},T)),v(k,Object(a.a)({className:c,scale:i,height:u,stroke:f,strokeWidth:m,strokeDasharray:p,numTicks:h,lineStyle:x,offset:O,tickValues:w},T)))}try{S.displayName="Grid",S.__docgenInfo={description:"",displayName:"Grid",props:{className:{defaultValue:null,description:"classname to apply to line group element.",name:"className",required:!1,type:{name:"string | undefined"}},width:{defaultValue:null,description:"Total width of each grid row line.",name:"width",required:!1,type:{name:"number"}},left:{defaultValue:null,description:"Left offset to apply to glyph g element container.",name:"left",required:!1,type:{name:"number | undefined"}},top:{defaultValue:null,description:"Top offset to apply to glyph g element container.",name:"top",required:!1,type:{name:"number | undefined"}},fill:{defaultValue:null,description:"fill color applied to line element.",name:"fill",required:!1,type:{name:"string | undefined"}},stroke:{defaultValue:null,description:"Grid line stroke color.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeDasharray:{defaultValue:null,description:"Grid line stroke-dasharray attribute.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"Grid line stroke thickness.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},innerRef:{defaultValue:null,description:"reference to line element.",name:"innerRef",required:!1,type:{name:"((instance: SVGLineElement | null) => void) | RefObject<SVGLineElement> | null | undefined"}},xScale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to map from ScaleInput to x-coordinates (GridColumns).",name:"xScale",required:!0,type:{name:"XScale"}},yScale:{defaultValue:null,description:"`@visx/scale` or `d3-scale` object used to map from ScaleInput to y-coordinates (GridRows).",name:"yScale",required:!0,type:{name:"YScale"}},xOffset:{defaultValue:null,description:"Pixel offset to apply as an x-translation to each GridColumns line.",name:"xOffset",required:!1,type:{name:"number | undefined"}},yOffset:{defaultValue:null,description:"Pixel offset to apply as an y-translation to each GridRows line.",name:"yOffset",required:!1,type:{name:"number | undefined"}},numTicksRows:{defaultValue:null,description:"Approximate number of row gridlines.",name:"numTicksRows",required:!1,type:{name:"number | undefined"}},numTicksColumns:{defaultValue:null,description:"Approximate number of column gridlines.",name:"numTicksColumns",required:!1,type:{name:"number | undefined"}},rowLineStyle:{defaultValue:null,description:"Style object to apply to GridRows.",name:"rowLineStyle",required:!1,type:{name:"CSSProperties | undefined"}},columnLineStyle:{defaultValue:null,description:"Style object to apply to GridColumns.",name:"columnLineStyle",required:!1,type:{name:"CSSProperties | undefined"}},rowTickValues:{defaultValue:null,description:"Exact values to be used for GridRows lines, passed to yScale. Use this if you need precise control over GridRows values.",name:"rowTickValues",required:!1,type:{name:"Parameters<YScale>[0][] | undefined"}},columnTickValues:{defaultValue:null,description:"Exact values to be used for GridColumns lines, passed to xScale. Use this if you need precise control over GridColumns values.",name:"columnTickValues",required:!1,type:{name:"Parameters<XScale>[0][] | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-grid/src/grids/Grid.tsx#Grid"]={docgenInfo:S.__docgenInfo,name:"Grid",path:"../visx-grid/src/grids/Grid.tsx#Grid"})}catch(q){}var x=t("QnPE"),O=t("smMw"),b=t("xtlv"),V=t("JjBE"),w=r.a.createElement,T=[g,k,S],G=[O.default,b.default,V.default];n.default=function(){return w(x.a,{components:T,examples:G,readme:'# @visx/grid\n\n<a title="@visx/grid npm downloads" href="https://www.npmjs.com/package/@visx/grid">\n  <img src="https://img.shields.io/npm/dm/@visx/grid.svg?style=flat-square" />\n</a>\n\nThe `@visx/grid` package lets you create gridlines for charts. `<GridRows />` render horizontally,\n`<GridColumns />` render vertically, or you can use a `<Grid />` to get them both at once!\n\n## Usage\n\n```js\nimport { Grid } from \'@visx/grid\';\n// or\n// import * as Grid from \'@visx/grid\';\n// <Grid.Grid />\n\nconst grid = (\n  <Grid\n    xScale={xScale}\n    yScale={yScale}\n    width={xMax}\n    height={yMax}\n    numTicksRows={numTicksForHeight(height)}\n    numTicksColumns={numTicksForWidth(width)}\n  />\n);\n```\n\n## Installation\n\n```\nnpm install --save @visx/grid\n```\n',visxPackage:"grid"})}},smMw:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return f}));var i=t("ERkP"),r=t.n(i),a=t("gnM9"),l=t("i9k6"),o=t("Soe+");t.d(n,"packageJson",(function(){return o}));var s=r.a.createElement,d={backgroundColor:a.a},u={color:a.c},c={showControls:!1};function f(){return s(l.a,{title:"Axes & scales",description:"<Axis.AxisBottom />",detailsStyles:u,detailsHeight:20,exampleProps:c,exampleRenderer:a.b,exampleUrl:"/axis",tileStyles:d})}},xtlv:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var i=t("ERkP"),r=t.n(i),a=t("wReH"),l=t("i9k6"),o=t("dk/h");t.d(n,"packageJson",(function(){return o}));var s=r.a.createElement,d={background:a.a},u={color:a.c,zIndex:1};function c(){return s(l.a,{title:"Bar Stack",description:"<Shape.BarStack />",detailsStyles:u,exampleRenderer:a.b,exampleUrl:"/barstack",tileStyles:d})}}},[["ZRGc",0,2,1,3,4,5,7,9,8,10,11,12,13,14,16,17,18,19,20,23,22,26,31,34]]]);