_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[63],{"Cf/J":function(e,t,i){"use strict";i.d(t,"a",(function(){return s}));var a=i("aWzz"),n=i.n(a),r=i("ERkP"),l=i.n(r);function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var a in i)Object.prototype.hasOwnProperty.call(i,a)&&(e[a]=i[a])}return e}).apply(this,arguments)}function s(e){var t=e.children,i=e.id,a=e.from,n=e.to,r=e.x1,s=e.y1,d=e.x2,u=e.y2,c=e.fromOffset,p=void 0===c?"0%":c,m=e.fromOpacity,f=void 0===m?1:m,h=e.toOffset,k=void 0===h?"100%":h,x=e.toOpacity,b=void 0===x?1:x,y=e.rotate,g=e.transform,v=e.vertical,T=void 0===v||v,P=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,["children","id","from","to","x1","y1","x2","y2","fromOffset","fromOpacity","toOffset","toOpacity","rotate","transform","vertical"]),V=r,O=d,q=s,S=u;return!T||V||O||q||S||(V="0",O="0",q="0",S="1"),l.a.createElement("defs",null,l.a.createElement("linearGradient",o({id:i,x1:V,y1:q,x2:O,y2:S,gradientTransform:y?"rotate("+y+")":g},P),!!t&&t,!t&&l.a.createElement("stop",{offset:p,stopColor:a,stopOpacity:f}),!t&&l.a.createElement("stop",{offset:k,stopColor:n,stopOpacity:b})))}s.propTypes={id:n.a.string.isRequired,from:n.a.string,to:n.a.string,x1:n.a.oneOfType([n.a.string,n.a.number]),x2:n.a.oneOfType([n.a.string,n.a.number]),y1:n.a.oneOfType([n.a.string,n.a.number]),y2:n.a.oneOfType([n.a.string,n.a.number]),fromOffset:n.a.oneOfType([n.a.string,n.a.number]),fromOpacity:n.a.oneOfType([n.a.string,n.a.number]),toOffset:n.a.oneOfType([n.a.string,n.a.number]),toOpacity:n.a.oneOfType([n.a.string,n.a.number]),rotate:n.a.oneOfType([n.a.string,n.a.number]),transform:n.a.string,children:n.a.node,vertical:n.a.bool}},HbGN:function(e,t,i){"use strict";i.d(t,"a",(function(){return n}));var a=i("+wNj");function n(e,t){if(null==e)return{};var i,n,r=Object(a.a)(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)i=l[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}},IX2p:function(e,t,i){"use strict";i.r(t);var a=i("ERkP"),n=i.n(a),r=i("zjfJ"),l=i("HbGN"),o=i("O94r"),s=i.n(o),d=i("JmwF"),u=i("nNND"),c=i("HlJr"),p=i("cxan"),m=i("fGyu"),f=i("WqRU"),h=i("O3m4"),k={top:"top",left:"left",right:"right",bottom:"bottom"};function x(e){var t,i,a,n=e.labelOffset,r=e.labelProps,l=e.orientation,o=e.range,s=e.tickLabelFontSize,d=e.tickLength,u=l===k.left||l===k.top?-1:1;if(l===k.top||l===k.bottom){var c=l===k.bottom&&"number"===typeof r.fontSize?r.fontSize:0;t=(Number(o[0])+Number(o[o.length-1]))/2,i=u*(d+n+s+c)}else t=u*((Number(o[0])+Number(o[o.length-1]))/2),i=-(d+n),a="rotate(".concat(90*u,")");return{x:t,y:i,transform:a}}try{x.displayName="getLabelTransform",x.__docgenInfo={description:"",displayName:"getLabelTransform",props:{labelOffset:{defaultValue:null,description:"",name:"labelOffset",required:!0,type:{name:"number"}},labelProps:{defaultValue:null,description:"",name:"labelProps",required:!0,type:{name:"Partial<TextProps>"}},orientation:{defaultValue:null,description:"",name:"orientation",required:!0,type:{name:'"left" | "top" | "bottom" | "right"'}},range:{defaultValue:null,description:"",name:"range",required:!0,type:{name:"AxisScaleOutput[]"}},tickLabelFontSize:{defaultValue:null,description:"",name:"tickLabelFontSize",required:!0,type:{name:"number"}},tickLength:{defaultValue:null,description:"",name:"tickLength",required:!0,type:{name:"number"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/utils/getLabelTransform.ts#getLabelTransform"]={docgenInfo:x.__docgenInfo,name:"getLabelTransform",path:"../visx-axis/src/utils/getLabelTransform.ts#getLabelTransform"})}catch($){}var b=n.a.createElement;function y(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function g(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?y(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):y(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function v(e){var t=e.hideTicks,i=e.horizontal,a=e.orientation,n=e.tickClassName,r=e.tickComponent,l=e.tickLabelProps,o=e.tickStroke,u=void 0===o?"#222":o,c=e.tickTransform;return e.ticks.map((function(e){var o,m=e.value,x=e.index,y=e.from,v=e.to,T=e.formattedValue,P=null!==(o=l[x])&&void 0!==o?o:{},V=Math.max(10,"number"===typeof P.fontSize&&P.fontSize||0),O=v.y+(i&&a!==k.top?V:0);return b(d.a,{key:"visx-tick-".concat(m,"-").concat(x),className:s()("visx-axis-tick",n),transform:c},!t&&b(f.a,{from:y,to:v,stroke:u,strokeLinecap:"square"}),r?r(g(g({},P),{},{x:v.x,y:O,formattedValue:T})):b(h.a,Object(p.a)({x:v.x,y:O},P),T))}))}try{v.displayName="Ticks",v.__docgenInfo={description:"",displayName:"Ticks",props:{tickLabelProps:{defaultValue:null,description:"",name:"tickLabelProps",required:!0,type:{name:"Partial<TextProps>[]"}},scale:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale) scale function.",name:"scale",required:!0,type:{name:"Scale"}},horizontal:{defaultValue:null,description:"Whether this axis is horizontal",name:"horizontal",required:!0,type:{name:"boolean"}},orientation:{defaultValue:null,description:"Placement of the axis",name:"orientation",required:!1,type:{name:'"left" | "top" | "bottom" | "right" | undefined'}},hideTicks:{defaultValue:null,description:"If true, will hide the ticks (but not the tick labels).",name:"hideTicks",required:!1,type:{name:"boolean | undefined"}},tickClassName:{defaultValue:null,description:"The class name applied to each tick group.",name:"tickClassName",required:!1,type:{name:"string | undefined"}},tickComponent:{defaultValue:null,description:"Override the component used to render tick labels (instead of <Text /> from @visx/text).",name:"tickComponent",required:!1,type:{name:"((tickRendererProps: TickRendererProps) => ReactNode) | undefined"}},tickStroke:{defaultValue:{value:"#222"},description:"The color for the tick's stroke value.",name:"tickStroke",required:!1,type:{name:"string | undefined"}},tickTransform:{defaultValue:null,description:"A custom SVG transform value to be applied to each tick group.",name:"tickTransform",required:!1,type:{name:"string | undefined"}},ticks:{defaultValue:null,description:"Computed ticks with positions and formatted value",name:"ticks",required:!0,type:{name:"ComputedTick<Scale>[]"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/axis/Ticks.tsx#Ticks"]={docgenInfo:v.__docgenInfo,name:"Ticks",path:"../visx-axis/src/axis/Ticks.tsx#Ticks"})}catch($){}var T=n.a.createElement,P={textAnchor:"middle",fontFamily:"Arial",fontSize:10,fill:"#222"};function V(e){var t=e.axisFromPoint,i=e.axisLineClassName,a=e.axisToPoint,r=e.hideAxisLine,l=e.hideTicks,o=e.horizontal,d=e.label,u=void 0===d?"":d,c=e.labelClassName,b=e.labelOffset,y=void 0===b?14:b,g=e.labelProps,V=void 0===g?P:g,O=e.orientation,q=void 0===O?k.bottom:O,S=e.scale,A=e.stroke,C=void 0===A?"#222":A,L=e.strokeDasharray,N=e.strokeWidth,R=void 0===N?1:N,_=e.tickClassName,w=e.tickComponent,E=e.tickLabelProps,F=void 0===E?function(){return P}:E,I=e.tickLength,j=void 0===I?8:I,z=e.tickStroke,B=void 0===z?"#222":z,D=e.tickTransform,Y=e.ticks,K=e.ticksComponent,W=void 0===K?v:K,Z=Y.map((function(e){var t=e.value,i=e.index;return F(t,i)})),M=Math.max.apply(Math,[10].concat(Object(m.a)(Z.map((function(e){return"number"===typeof e.fontSize?e.fontSize:0})))));return T(n.a.Fragment,null,W({hideTicks:l,horizontal:o,orientation:q,scale:S,tickClassName:_,tickComponent:w,tickLabelProps:Z,tickStroke:B,tickTransform:D,ticks:Y}),!r&&T(f.a,{className:s()("visx-axis-line",i),from:t,to:a,stroke:C,strokeWidth:R,strokeDasharray:L}),u&&T(h.a,Object(p.a)({className:s()("visx-axis-label",c)},x({labelOffset:y,labelProps:V,orientation:q,range:S.range(),tickLabelFontSize:M,tickLength:j}),V),u))}try{V.displayName="AxisRenderer",V.__docgenInfo={description:"",displayName:"AxisRenderer",props:{axisLineClassName:{defaultValue:null,description:"The class name applied to the axis line element.",name:"axisLineClassName",required:!1,type:{name:"string | undefined"}},hideAxisLine:{defaultValue:null,description:"If true, will hide the axis line.",name:"hideAxisLine",required:!1,type:{name:"boolean | undefined"}},hideTicks:{defaultValue:null,description:"If true, will hide the ticks (but not the tick labels).",name:"hideTicks",required:!1,type:{name:"boolean | undefined"}},hideZero:{defaultValue:null,description:"If true, will hide the '0' value tick and tick label.",name:"hideZero",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:{value:""},description:"The text for the axis label.",name:"label",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"The class name applied to the axis label text element.",name:"labelClassName",required:!1,type:{name:"string | undefined"}},labelOffset:{defaultValue:{value:14},description:"Pixel offset of the axis label (does not include tick label font size, which is accounted for automatically)",name:"labelOffset",required:!1,type:{name:"number | undefined"}},labelProps:{defaultValue:null,description:"Props applied to the axis label component.",name:"labelProps",required:!1,type:{name:"Partial<TextProps> | undefined"}},numTicks:{defaultValue:null,description:"The number of ticks wanted for the axis (note this is approximate)",name:"numTicks",required:!1,type:{name:"number | undefined"}},orientation:{defaultValue:{value:"Orientation.bottom"},description:"Placement of the axis",name:"orientation",required:!1,type:{name:'"left" | "top" | "bottom" | "right" | undefined'}},rangePadding:{defaultValue:null,description:"Pixel padding to apply to both sides of the axis.",name:"rangePadding",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:{value:"#222"},description:"The color for the stroke of the lines.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:{value:1},description:"The pixel value for the width of the lines.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"The pattern of dashes in the stroke.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},tickClassName:{defaultValue:null,description:"The class name applied to each tick group.",name:"tickClassName",required:!1,type:{name:"string | undefined"}},tickComponent:{defaultValue:null,description:"Override the component used to render tick labels (instead of <Text /> from @visx/text).",name:"tickComponent",required:!1,type:{name:"((tickRendererProps: TickRendererProps) => ReactNode) | undefined"}},ticksComponent:{defaultValue:null,description:"Override the component used to render all tick lines and labels.",name:"ticksComponent",required:!1,type:{name:"((tickRendererProps: TicksRendererProps<Scale>) => ReactNode) | undefined"}},tickFormat:{defaultValue:null,description:"A [d3 formatter](https://github.com/d3/d3-scale/blob/master/README.md#continuous_tickFormat) for the tick text.",name:"tickFormat",required:!1,type:{name:"TickFormatter<Parameters<Scale>[0]> | undefined"}},tickLabelProps:{defaultValue:{value:"(/** tickValue, index */) => defaultTextProps"},description:"A function that returns props for a given tick label.",name:"tickLabelProps",required:!1,type:{name:"TickLabelProps<Parameters<Scale>[0]> | undefined"}},tickLength:{defaultValue:{value:8},description:"The length of the tick lines.",name:"tickLength",required:!1,type:{name:"number | undefined"}},tickStroke:{defaultValue:{value:"#222"},description:"The color for the tick's stroke value.",name:"tickStroke",required:!1,type:{name:"string | undefined"}},tickTransform:{defaultValue:null,description:"A custom SVG transform value to be applied to each tick group.",name:"tickTransform",required:!1,type:{name:"string | undefined"}},axisFromPoint:{defaultValue:null,description:"Start point of the axis line",name:"axisFromPoint",required:!0,type:{name:"Point"}},axisToPoint:{defaultValue:null,description:"End point of the axis line",name:"axisToPoint",required:!0,type:{name:"Point"}},horizontal:{defaultValue:null,description:"Whether this axis is horizontal",name:"horizontal",required:!0,type:{name:"boolean"}},scale:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale) scale function.",name:"scale",required:!0,type:{name:"Scale"}},tickPosition:{defaultValue:null,description:"Function to compute tick position along the axis from tick value",name:"tickPosition",required:!0,type:{name:"(value: Parameters<Scale>[0]) => AxisScaleOutput"}},tickSign:{defaultValue:null,description:"Axis coordinate sign, -1 for left or top orientation.",name:"tickSign",required:!0,type:{name:"1 | -1"}},ticks:{defaultValue:null,description:"Computed ticks with positions and formatted value",name:"ticks",required:!0,type:{name:"ComputedTick<Scale>[]"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/axis/AxisRenderer.tsx#AxisRenderer"]={docgenInfo:V.__docgenInfo,name:"AxisRenderer",path:"../visx-axis/src/axis/AxisRenderer.tsx#AxisRenderer"})}catch($){}function O(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"center",i=e;if("start"!==t&&"bandwidth"in i){var a=i.bandwidth();return"center"===t&&(a/=2),i.round()&&(a=Math.round(a)),function(e){var t=i(e);return"number"===typeof t?t+a:t}}return e}try{O.displayName="getTickPosition",O.__docgenInfo={description:"Create a function that returns a tick position for the given tick value",displayName:"getTickPosition",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/utils/getTickPosition.ts#getTickPosition"]={docgenInfo:O.__docgenInfo,name:"getTickPosition",path:"../visx-axis/src/utils/getTickPosition.ts#getTickPosition"})}catch($){}var q=i("qhHv");function S(e){return"tickFormat"in e?e.tickFormat():q.a}try{S.displayName="getTickFormatter",S.__docgenInfo={description:"Returns a tick position for the given tick value",displayName:"getTickFormatter",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/utils/getTickFormatter.ts#getTickFormatter"]={docgenInfo:S.__docgenInfo,name:"getTickFormatter",path:"../visx-axis/src/utils/getTickFormatter.ts#getTickFormatter"})}catch($){}var A=i("rkTo");function C(e,t){var i=e.x,a=e.y;return new A.a(t?{x:i,y:a}:{x:a,y:i})}var L=n.a.createElement;function N(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function R(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?N(Object(i),!0).forEach((function(t){Object(r.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):N(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function _(e){var t=e.children,i=void 0===t?V:t,a=e.axisClassName,n=e.hideAxisLine,r=void 0!==n&&n,o=e.hideTicks,p=void 0!==o&&o,m=e.hideZero,f=void 0!==m&&m,h=e.left,x=void 0===h?0:h,b=e.numTicks,y=void 0===b?10:b,g=e.orientation,v=void 0===g?k.bottom:g,T=e.rangePadding,P=void 0===T?0:T,q=e.scale,A=e.tickFormat,N=e.tickLength,_=void 0===N?8:N,w=e.tickValues,E=e.top,F=void 0===E?0:E,I=Object(l.a)(e,["children","axisClassName","hideAxisLine","hideTicks","hideZero","left","numTicks","orientation","rangePadding","scale","tickFormat","tickLength","tickValues","top"]),j=null!==A&&void 0!==A?A:S(q),z=v===k.left,B=v===k.top,D=B||v===k.bottom,Y=O(q),K=z||B?-1:1,W=q.range(),Z=C({x:Number(W[0])+.5-P,y:0},D),M=C({x:Number(W[W.length-1])+.5+P,y:0},D),G=(null!==w&&void 0!==w?w:Object(u.a)(q,y)).filter((function(e){return!f||0!==e&&"0"!==e})).map((function(e,t){return{value:e,index:t}})),J=G.map((function(e){var t=e.value,i=e.index,a=Object(c.a)(Y(t));return{value:t,index:i,from:C({x:a,y:0},D),to:C({x:a,y:_*K},D),formattedValue:j(t,i,G)}}));return L(d.a,{className:s()("visx-axis",a),top:F,left:x},i(R(R({},I),{},{axisFromPoint:Z,axisToPoint:M,hideAxisLine:r,hideTicks:p,hideZero:f,horizontal:D,numTicks:y,orientation:v,rangePadding:P,scale:q,tickFormat:j,tickLength:_,tickPosition:Y,tickSign:K,ticks:J})))}try{_.displayName="Axis",_.__docgenInfo={description:"",displayName:"Axis",props:{axisLineClassName:{defaultValue:null,description:"The class name applied to the axis line element.",name:"axisLineClassName",required:!1,type:{name:"string | undefined"}},hideAxisLine:{defaultValue:{value:!1},description:"If true, will hide the axis line.",name:"hideAxisLine",required:!1,type:{name:"boolean | undefined"}},hideTicks:{defaultValue:{value:!1},description:"If true, will hide the ticks (but not the tick labels).",name:"hideTicks",required:!1,type:{name:"boolean | undefined"}},hideZero:{defaultValue:{value:!1},description:"If true, will hide the '0' value tick and tick label.",name:"hideZero",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:null,description:"The text for the axis label.",name:"label",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"The class name applied to the axis label text element.",name:"labelClassName",required:!1,type:{name:"string | undefined"}},labelOffset:{defaultValue:null,description:"Pixel offset of the axis label (does not include tick label font size, which is accounted for automatically)",name:"labelOffset",required:!1,type:{name:"number | undefined"}},labelProps:{defaultValue:null,description:"Props applied to the axis label component.",name:"labelProps",required:!1,type:{name:"Partial<TextProps> | undefined"}},numTicks:{defaultValue:{value:10},description:"The number of ticks wanted for the axis (note this is approximate)",name:"numTicks",required:!1,type:{name:"number | undefined"}},orientation:{defaultValue:{value:"Orientation.bottom"},description:"Placement of the axis",name:"orientation",required:!1,type:{name:'"left" | "top" | "bottom" | "right" | undefined'}},rangePadding:{defaultValue:{value:0},description:"Pixel padding to apply to both sides of the axis.",name:"rangePadding",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:null,description:"The color for the stroke of the lines.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"The pixel value for the width of the lines.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"The pattern of dashes in the stroke.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},tickClassName:{defaultValue:null,description:"The class name applied to each tick group.",name:"tickClassName",required:!1,type:{name:"string | undefined"}},tickComponent:{defaultValue:null,description:"Override the component used to render tick labels (instead of <Text /> from @visx/text).",name:"tickComponent",required:!1,type:{name:"((tickRendererProps: TickRendererProps) => ReactNode) | undefined"}},ticksComponent:{defaultValue:null,description:"Override the component used to render all tick lines and labels.",name:"ticksComponent",required:!1,type:{name:"((tickRendererProps: TicksRendererProps<Scale>) => ReactNode) | undefined"}},tickFormat:{defaultValue:null,description:"A [d3 formatter](https://github.com/d3/d3-scale/blob/master/README.md#continuous_tickFormat) for the tick text.",name:"tickFormat",required:!1,type:{name:"TickFormatter<Parameters<Scale>[0]> | undefined"}},tickLabelProps:{defaultValue:null,description:"A function that returns props for a given tick label.",name:"tickLabelProps",required:!1,type:{name:"TickLabelProps<Parameters<Scale>[0]> | undefined"}},tickLength:{defaultValue:{value:8},description:"The length of the tick lines.",name:"tickLength",required:!1,type:{name:"number | undefined"}},tickStroke:{defaultValue:null,description:"The color for the tick's stroke value.",name:"tickStroke",required:!1,type:{name:"string | undefined"}},tickTransform:{defaultValue:null,description:"A custom SVG transform value to be applied to each tick group.",name:"tickTransform",required:!1,type:{name:"string | undefined"}},axisClassName:{defaultValue:null,description:"The class name applied to the outermost axis group element.",name:"axisClassName",required:!1,type:{name:"string | undefined"}},left:{defaultValue:{value:0},description:"A left pixel offset applied to the entire axis.",name:"left",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale) scale function.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"An array of values that determine the number and values of the ticks. Falls back to `scale.ticks()` or `.domain()`.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},top:{defaultValue:{value:0},description:"A top pixel offset applied to the entire axis.",name:"top",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"For more control over rendering or to add event handlers to datum, pass a function as children.",name:"children",required:!1,type:{name:"((renderProps: AxisRendererProps<Scale>) => ReactNode) | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/axis/Axis.tsx#Axis"]={docgenInfo:_.__docgenInfo,name:"Axis",path:"../visx-axis/src/axis/Axis.tsx#Axis"})}catch($){}var w=n.a.createElement,E=function(){return{dy:"0.25em",fill:"#222",fontFamily:"Arial",fontSize:10,textAnchor:"middle"}};function F(e){var t=e.axisClassName,i=e.labelOffset,a=void 0===i?8:i,n=e.tickLabelProps,r=void 0===n?E:n,o=e.tickLength,d=void 0===o?8:o,u=Object(l.a)(e,["axisClassName","labelOffset","tickLabelProps","tickLength"]);return w(_,Object(p.a)({axisClassName:s()("visx-axis-bottom",t),labelOffset:a,orientation:k.bottom,tickLabelProps:r,tickLength:d},u))}try{F.displayName="AxisBottom",F.__docgenInfo={description:"",displayName:"AxisBottom",props:{axisLineClassName:{defaultValue:null,description:"The class name applied to the axis line element.",name:"axisLineClassName",required:!1,type:{name:"string | undefined"}},hideAxisLine:{defaultValue:null,description:"If true, will hide the axis line.",name:"hideAxisLine",required:!1,type:{name:"boolean | undefined"}},hideTicks:{defaultValue:null,description:"If true, will hide the ticks (but not the tick labels).",name:"hideTicks",required:!1,type:{name:"boolean | undefined"}},hideZero:{defaultValue:null,description:"If true, will hide the '0' value tick and tick label.",name:"hideZero",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:null,description:"The text for the axis label.",name:"label",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"The class name applied to the axis label text element.",name:"labelClassName",required:!1,type:{name:"string | undefined"}},labelOffset:{defaultValue:{value:8},description:"Pixel offset of the axis label (does not include tick label font size, which is accounted for automatically)",name:"labelOffset",required:!1,type:{name:"number | undefined"}},labelProps:{defaultValue:null,description:"Props applied to the axis label component.",name:"labelProps",required:!1,type:{name:"Partial<TextProps> | undefined"}},numTicks:{defaultValue:null,description:"The number of ticks wanted for the axis (note this is approximate)",name:"numTicks",required:!1,type:{name:"number | undefined"}},orientation:{defaultValue:null,description:"Placement of the axis",name:"orientation",required:!1,type:{name:'"left" | "top" | "bottom" | "right" | undefined'}},rangePadding:{defaultValue:null,description:"Pixel padding to apply to both sides of the axis.",name:"rangePadding",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:null,description:"The color for the stroke of the lines.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"The pixel value for the width of the lines.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"The pattern of dashes in the stroke.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},tickClassName:{defaultValue:null,description:"The class name applied to each tick group.",name:"tickClassName",required:!1,type:{name:"string | undefined"}},tickComponent:{defaultValue:null,description:"Override the component used to render tick labels (instead of <Text /> from @visx/text).",name:"tickComponent",required:!1,type:{name:"((tickRendererProps: TickRendererProps) => ReactNode) | undefined"}},ticksComponent:{defaultValue:null,description:"Override the component used to render all tick lines and labels.",name:"ticksComponent",required:!1,type:{name:"((tickRendererProps: TicksRendererProps<Scale>) => ReactNode) | undefined"}},tickFormat:{defaultValue:null,description:"A [d3 formatter](https://github.com/d3/d3-scale/blob/master/README.md#continuous_tickFormat) for the tick text.",name:"tickFormat",required:!1,type:{name:"TickFormatter<Parameters<Scale>[0]> | undefined"}},tickLabelProps:{defaultValue:null,description:"A function that returns props for a given tick label.",name:"tickLabelProps",required:!1,type:{name:"TickLabelProps<Parameters<Scale>[0]> | undefined"}},tickLength:{defaultValue:{value:8},description:"The length of the tick lines.",name:"tickLength",required:!1,type:{name:"number | undefined"}},tickStroke:{defaultValue:null,description:"The color for the tick's stroke value.",name:"tickStroke",required:!1,type:{name:"string | undefined"}},tickTransform:{defaultValue:null,description:"A custom SVG transform value to be applied to each tick group.",name:"tickTransform",required:!1,type:{name:"string | undefined"}},axisClassName:{defaultValue:null,description:"The class name applied to the outermost axis group element.",name:"axisClassName",required:!1,type:{name:"string | undefined"}},left:{defaultValue:null,description:"A left pixel offset applied to the entire axis.",name:"left",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale) scale function.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"An array of values that determine the number and values of the ticks. Falls back to `scale.ticks()` or `.domain()`.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},top:{defaultValue:null,description:"A top pixel offset applied to the entire axis.",name:"top",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"For more control over rendering or to add event handlers to datum, pass a function as children.",name:"children",required:!1,type:{name:"((renderProps: AxisRendererProps<Scale>) => ReactNode) | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/axis/AxisBottom.tsx#AxisBottom"]={docgenInfo:F.__docgenInfo,name:"AxisBottom",path:"../visx-axis/src/axis/AxisBottom.tsx#AxisBottom"})}catch($){}var I=n.a.createElement,j=function(){return{dx:"-0.25em",dy:"0.25em",fill:"#222",fontFamily:"Arial",fontSize:10,textAnchor:"end"}};function z(e){var t=e.axisClassName,i=e.labelOffset,a=void 0===i?36:i,n=e.tickLabelProps,r=void 0===n?j:n,o=e.tickLength,d=void 0===o?8:o,u=Object(l.a)(e,["axisClassName","labelOffset","tickLabelProps","tickLength"]);return I(_,Object(p.a)({axisClassName:s()("visx-axis-left",t),labelOffset:a,orientation:k.left,tickLabelProps:r,tickLength:d},u))}try{z.displayName="AxisLeft",z.__docgenInfo={description:"",displayName:"AxisLeft",props:{axisLineClassName:{defaultValue:null,description:"The class name applied to the axis line element.",name:"axisLineClassName",required:!1,type:{name:"string | undefined"}},hideAxisLine:{defaultValue:null,description:"If true, will hide the axis line.",name:"hideAxisLine",required:!1,type:{name:"boolean | undefined"}},hideTicks:{defaultValue:null,description:"If true, will hide the ticks (but not the tick labels).",name:"hideTicks",required:!1,type:{name:"boolean | undefined"}},hideZero:{defaultValue:null,description:"If true, will hide the '0' value tick and tick label.",name:"hideZero",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:null,description:"The text for the axis label.",name:"label",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"The class name applied to the axis label text element.",name:"labelClassName",required:!1,type:{name:"string | undefined"}},labelOffset:{defaultValue:{value:36},description:"Pixel offset of the axis label (does not include tick label font size, which is accounted for automatically)",name:"labelOffset",required:!1,type:{name:"number | undefined"}},labelProps:{defaultValue:null,description:"Props applied to the axis label component.",name:"labelProps",required:!1,type:{name:"Partial<TextProps> | undefined"}},numTicks:{defaultValue:null,description:"The number of ticks wanted for the axis (note this is approximate)",name:"numTicks",required:!1,type:{name:"number | undefined"}},orientation:{defaultValue:null,description:"Placement of the axis",name:"orientation",required:!1,type:{name:'"left" | "top" | "bottom" | "right" | undefined'}},rangePadding:{defaultValue:null,description:"Pixel padding to apply to both sides of the axis.",name:"rangePadding",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:null,description:"The color for the stroke of the lines.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"The pixel value for the width of the lines.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"The pattern of dashes in the stroke.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},tickClassName:{defaultValue:null,description:"The class name applied to each tick group.",name:"tickClassName",required:!1,type:{name:"string | undefined"}},tickComponent:{defaultValue:null,description:"Override the component used to render tick labels (instead of <Text /> from @visx/text).",name:"tickComponent",required:!1,type:{name:"((tickRendererProps: TickRendererProps) => ReactNode) | undefined"}},ticksComponent:{defaultValue:null,description:"Override the component used to render all tick lines and labels.",name:"ticksComponent",required:!1,type:{name:"((tickRendererProps: TicksRendererProps<Scale>) => ReactNode) | undefined"}},tickFormat:{defaultValue:null,description:"A [d3 formatter](https://github.com/d3/d3-scale/blob/master/README.md#continuous_tickFormat) for the tick text.",name:"tickFormat",required:!1,type:{name:"TickFormatter<Parameters<Scale>[0]> | undefined"}},tickLabelProps:{defaultValue:null,description:"A function that returns props for a given tick label.",name:"tickLabelProps",required:!1,type:{name:"TickLabelProps<Parameters<Scale>[0]> | undefined"}},tickLength:{defaultValue:{value:8},description:"The length of the tick lines.",name:"tickLength",required:!1,type:{name:"number | undefined"}},tickStroke:{defaultValue:null,description:"The color for the tick's stroke value.",name:"tickStroke",required:!1,type:{name:"string | undefined"}},tickTransform:{defaultValue:null,description:"A custom SVG transform value to be applied to each tick group.",name:"tickTransform",required:!1,type:{name:"string | undefined"}},axisClassName:{defaultValue:null,description:"The class name applied to the outermost axis group element.",name:"axisClassName",required:!1,type:{name:"string | undefined"}},left:{defaultValue:null,description:"A left pixel offset applied to the entire axis.",name:"left",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale) scale function.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"An array of values that determine the number and values of the ticks. Falls back to `scale.ticks()` or `.domain()`.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},top:{defaultValue:null,description:"A top pixel offset applied to the entire axis.",name:"top",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"For more control over rendering or to add event handlers to datum, pass a function as children.",name:"children",required:!1,type:{name:"((renderProps: AxisRendererProps<Scale>) => ReactNode) | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/axis/AxisLeft.tsx#AxisLeft"]={docgenInfo:z.__docgenInfo,name:"AxisLeft",path:"../visx-axis/src/axis/AxisLeft.tsx#AxisLeft"})}catch($){}var B=n.a.createElement,D=function(){return{dx:"0.25em",dy:"0.25em",fill:"#222",fontFamily:"Arial",fontSize:10,textAnchor:"start"}};function Y(e){var t=e.axisClassName,i=e.labelOffset,a=void 0===i?36:i,n=e.tickLabelProps,r=void 0===n?D:n,o=e.tickLength,d=void 0===o?8:o,u=Object(l.a)(e,["axisClassName","labelOffset","tickLabelProps","tickLength"]);return B(_,Object(p.a)({axisClassName:s()("visx-axis-right",t),labelOffset:a,orientation:k.right,tickLabelProps:r,tickLength:d},u))}try{Y.displayName="AxisRight",Y.__docgenInfo={description:"",displayName:"AxisRight",props:{axisLineClassName:{defaultValue:null,description:"The class name applied to the axis line element.",name:"axisLineClassName",required:!1,type:{name:"string | undefined"}},hideAxisLine:{defaultValue:null,description:"If true, will hide the axis line.",name:"hideAxisLine",required:!1,type:{name:"boolean | undefined"}},hideTicks:{defaultValue:null,description:"If true, will hide the ticks (but not the tick labels).",name:"hideTicks",required:!1,type:{name:"boolean | undefined"}},hideZero:{defaultValue:null,description:"If true, will hide the '0' value tick and tick label.",name:"hideZero",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:null,description:"The text for the axis label.",name:"label",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"The class name applied to the axis label text element.",name:"labelClassName",required:!1,type:{name:"string | undefined"}},labelOffset:{defaultValue:{value:36},description:"Pixel offset of the axis label (does not include tick label font size, which is accounted for automatically)",name:"labelOffset",required:!1,type:{name:"number | undefined"}},labelProps:{defaultValue:null,description:"Props applied to the axis label component.",name:"labelProps",required:!1,type:{name:"Partial<TextProps> | undefined"}},numTicks:{defaultValue:null,description:"The number of ticks wanted for the axis (note this is approximate)",name:"numTicks",required:!1,type:{name:"number | undefined"}},orientation:{defaultValue:null,description:"Placement of the axis",name:"orientation",required:!1,type:{name:'"left" | "top" | "bottom" | "right" | undefined'}},rangePadding:{defaultValue:null,description:"Pixel padding to apply to both sides of the axis.",name:"rangePadding",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:null,description:"The color for the stroke of the lines.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"The pixel value for the width of the lines.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"The pattern of dashes in the stroke.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},tickClassName:{defaultValue:null,description:"The class name applied to each tick group.",name:"tickClassName",required:!1,type:{name:"string | undefined"}},tickComponent:{defaultValue:null,description:"Override the component used to render tick labels (instead of <Text /> from @visx/text).",name:"tickComponent",required:!1,type:{name:"((tickRendererProps: TickRendererProps) => ReactNode) | undefined"}},ticksComponent:{defaultValue:null,description:"Override the component used to render all tick lines and labels.",name:"ticksComponent",required:!1,type:{name:"((tickRendererProps: TicksRendererProps<Scale>) => ReactNode) | undefined"}},tickFormat:{defaultValue:null,description:"A [d3 formatter](https://github.com/d3/d3-scale/blob/master/README.md#continuous_tickFormat) for the tick text.",name:"tickFormat",required:!1,type:{name:"TickFormatter<Parameters<Scale>[0]> | undefined"}},tickLabelProps:{defaultValue:null,description:"A function that returns props for a given tick label.",name:"tickLabelProps",required:!1,type:{name:"TickLabelProps<Parameters<Scale>[0]> | undefined"}},tickLength:{defaultValue:{value:8},description:"The length of the tick lines.",name:"tickLength",required:!1,type:{name:"number | undefined"}},tickStroke:{defaultValue:null,description:"The color for the tick's stroke value.",name:"tickStroke",required:!1,type:{name:"string | undefined"}},tickTransform:{defaultValue:null,description:"A custom SVG transform value to be applied to each tick group.",name:"tickTransform",required:!1,type:{name:"string | undefined"}},axisClassName:{defaultValue:null,description:"The class name applied to the outermost axis group element.",name:"axisClassName",required:!1,type:{name:"string | undefined"}},left:{defaultValue:null,description:"A left pixel offset applied to the entire axis.",name:"left",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale) scale function.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"An array of values that determine the number and values of the ticks. Falls back to `scale.ticks()` or `.domain()`.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},top:{defaultValue:null,description:"A top pixel offset applied to the entire axis.",name:"top",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"For more control over rendering or to add event handlers to datum, pass a function as children.",name:"children",required:!1,type:{name:"((renderProps: AxisRendererProps<Scale>) => ReactNode) | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/axis/AxisRight.tsx#AxisRight"]={docgenInfo:Y.__docgenInfo,name:"AxisRight",path:"../visx-axis/src/axis/AxisRight.tsx#AxisRight"})}catch($){}var K=n.a.createElement,W=function(){return{dy:"-0.75em",fill:"#222",fontFamily:"Arial",fontSize:10,textAnchor:"middle"}};function Z(e){var t=e.axisClassName,i=e.labelOffset,a=void 0===i?8:i,n=e.tickLabelProps,r=void 0===n?W:n,o=e.tickLength,d=void 0===o?8:o,u=Object(l.a)(e,["axisClassName","labelOffset","tickLabelProps","tickLength"]);return K(_,Object(p.a)({axisClassName:s()("visx-axis-top",t),labelOffset:a,orientation:k.top,tickLabelProps:r,tickLength:d},u))}try{Z.displayName="AxisTop",Z.__docgenInfo={description:"",displayName:"AxisTop",props:{axisLineClassName:{defaultValue:null,description:"The class name applied to the axis line element.",name:"axisLineClassName",required:!1,type:{name:"string | undefined"}},hideAxisLine:{defaultValue:null,description:"If true, will hide the axis line.",name:"hideAxisLine",required:!1,type:{name:"boolean | undefined"}},hideTicks:{defaultValue:null,description:"If true, will hide the ticks (but not the tick labels).",name:"hideTicks",required:!1,type:{name:"boolean | undefined"}},hideZero:{defaultValue:null,description:"If true, will hide the '0' value tick and tick label.",name:"hideZero",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:null,description:"The text for the axis label.",name:"label",required:!1,type:{name:"string | undefined"}},labelClassName:{defaultValue:null,description:"The class name applied to the axis label text element.",name:"labelClassName",required:!1,type:{name:"string | undefined"}},labelOffset:{defaultValue:{value:8},description:"Pixel offset of the axis label (does not include tick label font size, which is accounted for automatically)",name:"labelOffset",required:!1,type:{name:"number | undefined"}},labelProps:{defaultValue:null,description:"Props applied to the axis label component.",name:"labelProps",required:!1,type:{name:"Partial<TextProps> | undefined"}},numTicks:{defaultValue:null,description:"The number of ticks wanted for the axis (note this is approximate)",name:"numTicks",required:!1,type:{name:"number | undefined"}},orientation:{defaultValue:null,description:"Placement of the axis",name:"orientation",required:!1,type:{name:'"left" | "top" | "bottom" | "right" | undefined'}},rangePadding:{defaultValue:null,description:"Pixel padding to apply to both sides of the axis.",name:"rangePadding",required:!1,type:{name:"number | undefined"}},stroke:{defaultValue:null,description:"The color for the stroke of the lines.",name:"stroke",required:!1,type:{name:"string | undefined"}},strokeWidth:{defaultValue:null,description:"The pixel value for the width of the lines.",name:"strokeWidth",required:!1,type:{name:"string | number | undefined"}},strokeDasharray:{defaultValue:null,description:"The pattern of dashes in the stroke.",name:"strokeDasharray",required:!1,type:{name:"string | undefined"}},tickClassName:{defaultValue:null,description:"The class name applied to each tick group.",name:"tickClassName",required:!1,type:{name:"string | undefined"}},tickComponent:{defaultValue:null,description:"Override the component used to render tick labels (instead of <Text /> from @visx/text).",name:"tickComponent",required:!1,type:{name:"((tickRendererProps: TickRendererProps) => ReactNode) | undefined"}},ticksComponent:{defaultValue:null,description:"Override the component used to render all tick lines and labels.",name:"ticksComponent",required:!1,type:{name:"((tickRendererProps: TicksRendererProps<Scale>) => ReactNode) | undefined"}},tickFormat:{defaultValue:null,description:"A [d3 formatter](https://github.com/d3/d3-scale/blob/master/README.md#continuous_tickFormat) for the tick text.",name:"tickFormat",required:!1,type:{name:"TickFormatter<Parameters<Scale>[0]> | undefined"}},tickLabelProps:{defaultValue:null,description:"A function that returns props for a given tick label.",name:"tickLabelProps",required:!1,type:{name:"TickLabelProps<Parameters<Scale>[0]> | undefined"}},tickLength:{defaultValue:{value:8},description:"The length of the tick lines.",name:"tickLength",required:!1,type:{name:"number | undefined"}},tickStroke:{defaultValue:null,description:"The color for the tick's stroke value.",name:"tickStroke",required:!1,type:{name:"string | undefined"}},tickTransform:{defaultValue:null,description:"A custom SVG transform value to be applied to each tick group.",name:"tickTransform",required:!1,type:{name:"string | undefined"}},axisClassName:{defaultValue:null,description:"The class name applied to the outermost axis group element.",name:"axisClassName",required:!1,type:{name:"string | undefined"}},left:{defaultValue:null,description:"A left pixel offset applied to the entire axis.",name:"left",required:!1,type:{name:"number | undefined"}},scale:{defaultValue:null,description:"A [d3](https://github.com/d3/d3-scale) or [visx](https://github.com/airbnb/visx/tree/master/packages/visx-scale) scale function.",name:"scale",required:!0,type:{name:"Scale"}},tickValues:{defaultValue:null,description:"An array of values that determine the number and values of the ticks. Falls back to `scale.ticks()` or `.domain()`.",name:"tickValues",required:!1,type:{name:"Parameters<Scale>[0][] | undefined"}},top:{defaultValue:null,description:"A top pixel offset applied to the entire axis.",name:"top",required:!1,type:{name:"number | undefined"}},children:{defaultValue:null,description:"For more control over rendering or to add event handlers to datum, pass a function as children.",name:"children",required:!1,type:{name:"((renderProps: AxisRendererProps<Scale>) => ReactNode) | undefined"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["../visx-axis/src/axis/AxisTop.tsx#AxisTop"]={docgenInfo:Z.__docgenInfo,name:"AxisTop",path:"../visx-axis/src/axis/AxisTop.tsx#AxisTop"})}catch($){}var M=i("QnPE"),G=i("smMw"),J=i("xtlv"),H=i("JjBE"),U=n.a.createElement,X=[_,F,z,Y,Z],Q=[G.default,J.default,H.default];t.default=function(){return U(M.a,{components:X,examples:Q,readme:'# @visx/axis\n\n<p>\n  <a title="@visx/axis npm downloads" href="https://www.npmjs.com/package/@visx/axis">\n    <img src="https://img.shields.io/npm/dm/@visx/axis.svg?style=flat-square" />\n  </a>\n</p>\n\nAn axis component consists of a line with ticks, tick labels, and an axis label that helps viewers\ninterpret your graph.\n\nYou can use one of the 4 pre-made axes, or you can create your own based on the `<Axis />` element.\nNote that the `@visx/react-spring` package exports an `AnimatedAxis` variant with animated ticks.\n\n## Installation\n\n```\nnpm install --save @visx/axis\n```\n',visxPackage:"axis"})}},Uwz5:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/axis",function(){return i("IX2p")}])},smMw:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return p}));var a=i("ERkP"),n=i.n(a),r=i("gnM9"),l=i("i9k6"),o=i("Soe+");i.d(t,"packageJson",(function(){return o}));var s=n.a.createElement,d={backgroundColor:r.a},u={color:r.c},c={showControls:!1};function p(){return s(l.a,{title:"Axes & scales",description:"<Axis.AxisBottom />",detailsStyles:u,detailsHeight:20,exampleProps:c,exampleRenderer:r.b,exampleUrl:"/axis",tileStyles:d})}},xtlv:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return c}));var a=i("ERkP"),n=i.n(a),r=i("wReH"),l=i("i9k6"),o=i("dk/h");i.d(t,"packageJson",(function(){return o}));var s=n.a.createElement,d={background:r.a},u={color:r.c,zIndex:1};function c(){return s(l.a,{title:"Bar Stack",description:"<Shape.BarStack />",detailsStyles:u,exampleRenderer:r.b,exampleUrl:"/barstack",tileStyles:d})}}},[["Uwz5",0,2,1,3,4,5,7,9,8,10,11,12,13,14,16,17,18,19,20,23,22,26,31,34]]]);