_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[51],{"6fY6":function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/axis",function(){return e("k4uw")}])},"Cf/J":function(n,t,e){"use strict";e.d(t,"a",(function(){return c}));var r=e("aWzz"),a=e.n(r),i=e("ERkP"),o=e.n(i);function s(){return(s=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}return n}).apply(this,arguments)}function c(n){var t=n.children,e=n.id,r=n.from,a=n.to,i=n.x1,c=n.y1,l=n.x2,u=n.y2,d=n.fromOffset,f=void 0===d?"0%":d,m=n.fromOpacity,g=void 0===m?1:m,h=n.toOffset,p=void 0===h?"100%":h,y=n.toOpacity,b=void 0===y?1:y,v=n.rotate,x=n.transform,w=n.vertical,O=void 0===w||w,k=function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,["children","id","from","to","x1","y1","x2","y2","fromOffset","fromOpacity","toOffset","toOpacity","rotate","transform","vertical"]),j=i,T=l,A=c,S=u;return!O||j||T||A||S||(j="0",T="0",A="0",S="1"),o.a.createElement("defs",null,o.a.createElement("linearGradient",s({id:e,x1:j,y1:A,x2:T,y2:S,gradientTransform:v?"rotate("+v+")":x},k),!!t&&t,!t&&o.a.createElement("stop",{offset:f,stopColor:r,stopOpacity:g}),!t&&o.a.createElement("stop",{offset:p,stopColor:a,stopOpacity:b})))}c.propTypes={id:a.a.string.isRequired,from:a.a.string,to:a.a.string,x1:a.a.oneOfType([a.a.string,a.a.number]),x2:a.a.oneOfType([a.a.string,a.a.number]),y1:a.a.oneOfType([a.a.string,a.a.number]),y2:a.a.oneOfType([a.a.string,a.a.number]),fromOffset:a.a.oneOfType([a.a.string,a.a.number]),fromOpacity:a.a.oneOfType([a.a.string,a.a.number]),toOffset:a.a.oneOfType([a.a.string,a.a.number]),toOpacity:a.a.oneOfType([a.a.string,a.a.number]),rotate:a.a.oneOfType([a.a.string,a.a.number]),transform:a.a.string,children:a.a.node,vertical:a.a.bool}},HO86:function(n,t,e){"use strict";e.d(t,"a",(function(){return a}));var r=e("lEbO");function a(n,t){if(n){if("string"===typeof n)return Object(r.a)(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?Object(r.a)(n,t):void 0}}},HlJr:function(n,t,e){"use strict";function r(n){if(("function"===typeof n||"object"===typeof n&&n)&&"valueOf"in n){var t=n.valueOf();if("number"===typeof t)return t}return n}e.d(t,"a",(function(){return r}))},O3m4:function(n,t,e){"use strict";e.d(t,"a",(function(){return c}));var r=e("ERkP"),a=e.n(r),i=e("j1R1");function o(){return(o=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}return n}).apply(this,arguments)}var s={overflow:"visible"};function c(n){var t=n.dx,e=void 0===t?0:t,r=n.dy,c=void 0===r?0:r,l=n.textAnchor,u=void 0===l?"start":l,d=n.innerRef,f=(n.verticalAnchor,n.angle,n.lineHeight),m=void 0===f?"1em":f,g=(n.scaleToFit,n.capHeight,n.width,function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,["dx","dy","textAnchor","innerRef","verticalAnchor","angle","lineHeight","scaleToFit","capHeight","width"])),h=g.x,p=void 0===h?0:h,y=g.fontSize,b=Object(i.a)(n),v=b.wordsByLines,x=b.startDy,w=b.transform;return a.a.createElement("svg",{ref:d,x:e,y:c,fontSize:y,style:s},v.length>0?a.a.createElement("text",o({transform:w},g,{textAnchor:u}),v.map((function(n,t){return a.a.createElement("tspan",{key:t,x:p,dy:0===t?x:m},n.words.join(" "))}))):null)}},WqRU:function(n,t,e){"use strict";e.d(t,"a",(function(){return c}));var r=e("ERkP"),a=e.n(r),i=e("O94r"),o=e.n(i);function s(){return(s=Object.assign||function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}return n}).apply(this,arguments)}function c(n){var t=n.from,e=void 0===t?{x:0,y:0}:t,r=n.to,i=void 0===r?{x:1,y:1}:r,c=n.fill,l=void 0===c?"transparent":c,u=n.className,d=n.innerRef,f=function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,["from","to","fill","className","innerRef"]),m=e.x===i.x||e.y===i.y;return a.a.createElement("line",s({ref:d,className:o()("visx-line",u),x1:e.x,y1:e.y,x2:i.x,y2:i.y,fill:l,shapeRendering:m?"crispEdges":"auto"},f))}},fGyu:function(n,t,e){"use strict";e.d(t,"a",(function(){return i}));var r=e("lEbO");var a=e("HO86");function i(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}(n)||Object(a.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},hdX1:function(n,t,e){"use strict";var r=e("ViZ6"),a=e.n(r);t.a=a()((function(n,t){try{var e=document.getElementById("__react_svg_text_measurement_id");if(!e){var r=document.createElementNS("http://www.w3.org/2000/svg","svg");r.style.width="0",r.style.height="0",r.style.position="absolute",r.style.top="-100%",r.style.left="-100%",(e=document.createElementNS("http://www.w3.org/2000/svg","text")).setAttribute("id","__react_svg_text_measurement_id"),r.appendChild(e),document.body.appendChild(r)}return Object.assign(e.style,t),e.textContent=n,e.getComputedTextLength()}catch(a){return null}}),(function(n,t){return n+"_"+JSON.stringify(t)}))},j1R1:function(n,t,e){"use strict";e.d(t,"a",(function(){return l}));var r=e("ERkP"),a=e("leIH"),i=e.n(a),o=e("hdX1");function s(n){return"number"===typeof n}function c(n){return"number"===typeof n&&Number.isFinite(n)||"string"===typeof n}function l(n){var t=n.verticalAnchor,e=void 0===t?"end":t,a=n.scaleToFit,l=void 0!==a&&a,u=n.angle,d=n.width,f=n.lineHeight,m=void 0===f?"1em":f,g=n.capHeight,h=void 0===g?"0.71em":g,p=n.children,y=n.style,b=function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,["verticalAnchor","scaleToFit","angle","width","lineHeight","capHeight","children","style"]),v=b.x,x=void 0===v?0:v,w=b.y,O=void 0===w?0:w,k=!c(x)||!c(O),j=Object(r.useMemo)((function(){return{wordsWithWidth:(null==p?[]:p.toString().split(/(?:(?!\u00A0+)\s+)/)).map((function(n){return{word:n,wordWidth:Object(o.a)(n,y)||0}})),spaceWidth:Object(o.a)("\xa0",y)||0}}),[p,y]),T=j.wordsWithWidth,A=j.spaceWidth,S=Object(r.useMemo)((function(){return k?[]:d||l?T.reduce((function(n,t){var e=t.word,r=t.wordWidth,a=n[n.length-1];if(a&&(null==d||l||(a.width||0)+r+A<d))a.words.push(e),a.width=a.width||0,a.width+=r+A;else{var i={words:[e],width:r};n.push(i)}return n}),[]):[{words:null==p?[]:p.toString().split(/(?:(?!\u00A0+)\s+)/)}]}),[k,d,l,p,T,A]),C=Object(r.useMemo)((function(){return k?"":"start"===e?i()("calc("+h+")"):"middle"===e?i()("calc("+(S.length-1)/2+" * -"+m+" + ("+h+" / 2))"):i()("calc("+(S.length-1)+" * -"+m+")")}),[k,e,h,S.length,m]),E=Object(r.useMemo)((function(){var n=[];if(k)return"";if(s(x)&&s(O)&&s(d)&&l&&S.length>0){var t=S[0].width||1,e=d/t,r=e,a=x-e*x,i=O-r*O;n.push("matrix("+e+", 0, 0, "+r+", "+a+", "+i+")")}return u&&n.push("rotate("+u+", "+x+", "+O+")"),n.length>0?n.join(" "):""}),[k,x,O,d,l,S,u]);return{wordsByLines:S,startDy:C,transform:E}}},k4uw:function(n,t,e){"use strict";e.r(t);var r=e("ERkP"),a=e.n(r),i=e("6wy5"),o=e("gnM9"),s=e("Soe+"),c=a.a.createElement;t.default=function(){return c(i.a,{component:o.b,title:"Axis",codeSandboxDirectoryName:"visx-axis",packageJson:s},"import React, { useState, useMemo } from 'react';\nimport AreaClosed from '@visx/shape/lib/shapes/AreaClosed';\nimport { curveMonotoneX } from '@visx/curve';\nimport { scaleUtc, scaleLinear, scaleLog, scaleBand, ScaleInput, coerceNumber } from '@visx/scale';\nimport { Orientation, SharedAxisProps, AxisScale } from '@visx/axis';\nimport { AnimatedAxis, AnimatedGridRows, AnimatedGridColumns } from '@visx/react-spring';\nimport { LinearGradient } from '@visx/gradient';\nimport { timeFormat } from 'd3-time-format';\n\nexport const backgroundColor = '#da7cff';\nconst axisColor = '#fff';\nconst tickLabelColor = '#fff';\nexport const labelColor = '#340098';\nconst gridColor = '#6e0fca';\nconst margin = {\n  top: 40,\n  right: 150,\n  bottom: 20,\n  left: 50,\n};\n\nconst tickLabelProps = () =>\n  ({\n    fill: tickLabelColor,\n    fontSize: 12,\n    fontFamily: 'sans-serif',\n    textAnchor: 'middle',\n  } as const);\n\nconst getMinMax = (vals: (number | { valueOf(): number })[]) => {\n  const numericVals = vals.map(coerceNumber);\n  return [Math.min(...numericVals), Math.max(...numericVals)];\n};\n\nexport type AxisProps = {\n  width: number;\n  height: number;\n  showControls?: boolean;\n};\n\nexport default function Example({\n  width: outerWidth = 800,\n  height: outerHeight = 800,\n  showControls = true,\n}: AxisProps) {\n  // in svg, margin is subtracted from total width/height\n  const width = outerWidth - margin.left - margin.right;\n  const height = outerHeight - margin.top - margin.bottom;\n  const [dataToggle, setDataToggle] = useState(true);\n  const [animationTrajectory, setAnimationTrajectory] = useState<\n    'outside' | 'center' | 'min' | 'max'\n  >('center');\n\n  interface AxisDemoProps<Scale extends AxisScale> extends SharedAxisProps<Scale> {\n    values: ScaleInput<Scale>[];\n  }\n\n  const axes: AxisDemoProps<AxisScale<number>>[] = useMemo(() => {\n    // toggle between two value ranges to demo animation\n    const linearValues = dataToggle ? [0, 2, 4, 6, 8, 10] : [6, 8, 10, 12];\n    const bandValues = dataToggle ? ['a', 'b', 'c', 'd'] : ['d', 'c', 'b', 'a'];\n    const timeValues = dataToggle\n      ? [new Date('2020-01-01'), new Date('2020-02-01')]\n      : [new Date('2020-02-01'), new Date('2020-03-01')];\n    const logValues = dataToggle ? [1, 10, 100, 1000, 10000] : [0.0001, 0.001, 0.1, 1, 10, 100];\n\n    return [\n      {\n        scale: scaleLinear({\n          domain: getMinMax(linearValues),\n          range: [0, width],\n        }),\n        values: linearValues,\n        tickFormat: (v: number, index: number, ticks: { value: number; index: number }[]) =>\n          index === 0 ? 'first' : index === ticks[ticks.length - 1].index ? 'last' : `${v}`,\n        label: 'linear',\n      },\n      {\n        scale: scaleBand({\n          domain: bandValues,\n          range: [0, width],\n          paddingOuter: 0,\n          paddingInner: 1,\n        }),\n        values: bandValues,\n        tickFormat: (v: string) => v,\n        label: 'categories',\n      },\n      {\n        scale: scaleUtc({\n          domain: getMinMax(timeValues),\n          range: [0, width],\n        }),\n        values: timeValues,\n        tickFormat: (v: Date, i: number) =>\n          i === 3 ? '\ud83c\udf89' : width > 400 || i % 2 === 0 ? timeFormat('%b %d')(v) : '',\n        label: 'time',\n      },\n      {\n        scale: scaleLog({\n          domain: getMinMax(logValues),\n          range: [0, width],\n        }),\n        values: logValues,\n        tickFormat: (v: number) => {\n          const asString = `${v}`;\n          // label only major ticks\n          return asString.match(/^[.01?[\\]]*$/) ? asString : '';\n        },\n        label: 'log',\n      },\n    ];\n  }, [dataToggle, width]);\n\n  if (width < 10) return null;\n\n  const scalePadding = 40;\n  const scaleHeight = height / axes.length - scalePadding;\n\n  const yScale = scaleLinear({\n    domain: [100, 0],\n    range: [scaleHeight, 0],\n  });\n\n  return (\n    <>\n      <svg width={outerWidth} height={outerHeight}>\n        <LinearGradient\n          id=\"visx-axis-gradient\"\n          from={backgroundColor}\n          to={backgroundColor}\n          toOpacity={0.5}\n        />\n        <rect\n          x={0}\n          y={0}\n          width={outerWidth}\n          height={outerHeight}\n          fill={'url(#visx-axis-gradient)'}\n          rx={14}\n        />\n        <g transform={`translate(${margin.left},${margin.top})`}>\n          {axes.map(({ scale, values, label, tickFormat }, i) => (\n            <g key={`scale-${i}`} transform={`translate(0, ${i * (scaleHeight + scalePadding)})`}>\n              <AnimatedGridRows\n                // force remount when this changes to see the animation difference\n                key={`gridrows-${animationTrajectory}`}\n                scale={yScale}\n                stroke={gridColor}\n                width={width}\n                numTicks={dataToggle ? 1 : 3}\n                animationTrajectory={animationTrajectory}\n              />\n              <AnimatedGridColumns\n                // force remount when this changes to see the animation difference\n                key={`gridcolumns-${animationTrajectory}`}\n                scale={scale}\n                stroke={gridColor}\n                height={scaleHeight}\n                numTicks={dataToggle ? 5 : 2}\n                animationTrajectory={animationTrajectory}\n              />\n              <AreaClosed\n                data={values.map(x => [\n                  (scale(x) ?? 0) +\n                    // offset point half of band width for band scales\n                    ('bandwidth' in scale && typeof scale!.bandwidth !== 'undefined'\n                      ? scale.bandwidth!() / 2\n                      : 0),\n                  yScale(10 + Math.random() * 90),\n                ])}\n                yScale={yScale}\n                curve={curveMonotoneX}\n                fill={gridColor}\n                fillOpacity={0.2}\n              />\n              <AnimatedAxis\n                // force remount when this changes to see the animation difference\n                key={`axis-${animationTrajectory}`}\n                orientation={Orientation.bottom}\n                top={scaleHeight}\n                scale={scale}\n                tickFormat={tickFormat}\n                stroke={axisColor}\n                tickStroke={axisColor}\n                tickLabelProps={tickLabelProps}\n                tickValues={label === 'log' || label === 'time' ? undefined : values}\n                numTicks={label === 'time' ? 6 : undefined}\n                label={label}\n                labelProps={{\n                  x: width + 30,\n                  y: -10,\n                  fill: labelColor,\n                  fontSize: 18,\n                  strokeWidth: 0,\n                  stroke: '#fff',\n                  paintOrder: 'stroke',\n                  fontFamily: 'sans-serif',\n                  textAnchor: 'start',\n                }}\n                animationTrajectory={animationTrajectory}\n              />\n            </g>\n          ))}\n        </g>\n      </svg>\n      {showControls && (\n        <>\n          <div style={{ fontSize: 11 }}>\n            <strong>animation trajectory</strong>\n            <label>\n              <input\n                type=\"radio\"\n                onChange={() => setAnimationTrajectory('outside')}\n                checked={animationTrajectory === 'outside'}\n              />{' '}\n              outside\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                onChange={() => setAnimationTrajectory('center')}\n                checked={animationTrajectory === 'center'}\n              />{' '}\n              center\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                onChange={() => setAnimationTrajectory('min')}\n                checked={animationTrajectory === 'min'}\n              />{' '}\n              min\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                onChange={() => setAnimationTrajectory('max')}\n                checked={animationTrajectory === 'max'}\n              />{' '}\n              max\n            </label>\n          </div>\n          <button onClick={() => setDataToggle(!dataToggle)}>Update scales</button>\n        </>\n      )}\n    </>\n  );\n}\n")}},lEbO:function(n,t,e){"use strict";function r(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}e.d(t,"a",(function(){return r}))},nNND:function(n,t,e){"use strict";function r(n,t){var e=n;return"ticks"in e?e.ticks(t):e.domain().filter((function(n,e,r){return null==t||r.length<=t||e%Math.round((r.length-1)/t)===0}))}e.d(t,"a",(function(){return r}))},pn27:function(n,t,e){"use strict";t.a={top:"top",left:"left",right:"right",bottom:"bottom"}},qhHv:function(n,t,e){"use strict";function r(n){return null==n?void 0:n.toString()}e.d(t,"a",(function(){return r}))},rkTo:function(n,t,e){"use strict";function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}e.d(t,"a",(function(){return a}));var a=function(){function n(n){var t=n.x,e=void 0===t?0:t,a=n.y,i=void 0===a?0:a;r(this,"x",0),r(this,"y",0),this.x=e,this.y=i}var t=n.prototype;return t.value=function(){return{x:this.x,y:this.y}},t.toArray=function(){return[this.x,this.y]},n}()}},[["6fY6",0,2,1,3,4,5,6,7,11,12,13,14,17,19,20,23,26]]]);